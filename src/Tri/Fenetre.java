/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tri;

import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Vector;

/**
 *
 * @author Blondin
 */
public class Fenetre extends javax.swing.JFrame {

    private DefaultTableModel model=new DefaultTableModel();
    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        initComponents();
        //model
        model = (DefaultTableModel) this.tab.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nom = new javax.swing.JTextField();
        prenom = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        graph = new javax.swing.JButton();
        tri = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("PROMOTION");

        jLabel2.setText("Nom");

        jLabel3.setText("Prenom");

        jLabel4.setText("Age");

        nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActionPerformed(evt);
            }
        });

        age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageActionPerformed(evt);
            }
        });

        add.setText("ADD");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        refresh.setText("REFRESH");
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        graph.setText("GRAPH");

        tri.setText("TRI");
        tri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                triMouseClicked(evt);
            }
        });

        tab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Prenom", "Age"
            }
        ));
        jScrollPane1.setViewportView(tab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prenom, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(age)
                            .addComponent(nom))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(graph)
                            .addComponent(add))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tri, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refresh, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(60, 60, 60)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addComponent(jLabel4)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(refresh))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tri)
                            .addComponent(graph))
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActionPerformed

    private void ageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
        String str_nom=this.nom.getText().toString();
        String str_prenom=this.prenom.getText().toString();
        String str_age=this.age.getText().toString();
        if(str_nom.isEmpty() && str_prenom.isEmpty() && str_age.isEmpty()){
        
        }else if(str_nom.isEmpty()){
        
        }else if(str_prenom.isEmpty()){
        
        }else if(str_age.isEmpty()){
        
        }else{
            model.addRow(new Object[]{str_nom,str_prenom,str_age});
            this.tab.setModel(model);
            this.nom.setText("");
            this.prenom.setText("");
            this.age.setText("");
        }
    }//GEN-LAST:event_addMouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        // TODO add your handling code here:
        model=new DefaultTableModel();
        model.addColumn("Nom");
        model.addColumn("Prenom");
        model.addColumn("Age");
        this.tab.setModel(model);
    }//GEN-LAST:event_refreshMouseClicked

    private void triMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_triMouseClicked
        // TODO add your handling code here:
        TriShell tc = new TriShell();
        int tabSize=model.getRowCount();
        ArrayList<Etudiant> etudiants=new ArrayList<>();
        for (int i = 0; i < tabSize; i++) {
            String t1=(String) model.getValueAt(i, 0);
            String t2=(String) model.getValueAt(i, 1);
            String t3=(String) model.getValueAt(i, 2);
            etudiants.add(new Etudiant(t1,t2,t3));
        }
        //par Nom
        Vector vectTriParNom = new Vector();
        for(Etudiant e : etudiants){
            vectTriParNom.add(e.getNom());
        }
        String tableau[] = new String[vectTriParNom.size()];
        vectTriParNom.copyInto(tableau);
        String tableauCopy[] = tableau;
        Vector vectTaille = new Vector();
        for (int it = 0; it < tableau.length; it++) {
            vectTaille.add(new Long(tableau[it].length()));
        }
        Long[] tabTaille = (Long[]) vectTaille.toArray(new Long[vectTaille.size()]);
        int valeurTaille = tc.sort(tabTaille);

        Vector vecTraduit = new Vector();
        Long copyTabTraduit[] = null;
        for (int itra = 0; itra < tableau.length; itra++) {
            vecTraduit.add(Fenetre.traduire(tableau[itra].substring(0, valeurTaille)));
        }

        Long[] tabTraduit = (Long[]) vecTraduit.toArray(new Long[vecTraduit.size()]);

        tc.printArray(tabTraduit);

        tc.sort(tabTraduit);

        tc.printArray(tabTraduit);

        copyTabTraduit = (Long[]) vecTraduit.toArray(new Long[vecTraduit.size()]);
        //Affichage du resultat
        Vector tableau_vide = new Vector();
        for (int aucon = 0; aucon < copyTabTraduit.length; aucon++) {
            for (int con = 0; con < tc.l.length; con++) {
                if (copyTabTraduit[con].equals(tc.l[aucon])) {
                    tableau_vide.add(tableauCopy[con]);
                }
            }
        }
        //
        model=new DefaultTableModel();
        model.addColumn("Nom");
        model.addColumn("Prenom");
        model.addColumn("Age");
        this.tab.setModel(model);
        //
        //Affichage du résultat
        String inter[] = new String[tableau_vide.size()];
        tableau_vide.copyInto(inter);
        for (int i = 0; i < inter.length; i++) {
            for(Etudiant e : etudiants){
                if(e.getNom()==inter[i]){
                    model.addRow(new Object[]{e.getNom(),e.getPrenom(),e.getAge()});
                }
            }
        }
        this.tab.setModel(model);
        
    }//GEN-LAST:event_triMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fenetre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField age;
    private javax.swing.JButton graph;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nom;
    private javax.swing.JTextField prenom;
    private javax.swing.JButton refresh;
    private javax.swing.JTable tab;
    private javax.swing.JButton tri;
    // End of variables declaration//GEN-END:variables
public static Long traduire(String msg) {
        msg = msg.toUpperCase();
        String s = "";
        Long d = null;
        int res = 0;
        char[] lettres = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'};
        int[] chiffres = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26};
        int[] ent = null;
        int len = msg.length();
        for (int x = 0; x < len; x++) {
            char c = (char) (msg.charAt(x));
            for (int deb = 0; deb < lettres.length; deb++) {
                if (c == lettres[deb]) {
                    try {
                        res += chiffres[deb];
                    } catch (NullPointerException npe) {
                    }
                    if (chiffres[deb] < 10) {
                        s += "0" + chiffres[deb];
                    } else {
                        s += chiffres[deb];
                    }
                }
            }
            try {
                d = Long.parseLong(s);
            } catch (NumberFormatException e) {
            }
            try {
                try {
                    ent[x] = Integer.parseInt(s);
                } catch (NumberFormatException nf) {
                }
            } catch (NullPointerException ne) {
            }
        }
        return d;
    }
}
